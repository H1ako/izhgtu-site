# Generated by Django 3.2 on 2023-01-05 09:35

import annoying.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('svg', '0002_auto_20221206_1738'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authentication', '0007_alter_user_picture'),
        ('users', '0006_alter_studentcard_card_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('short_description', models.CharField(blank=True, max_length=100, null=True)),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='svg.svgtyped')),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='learning_building',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Learning building'),
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('title', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Контакт пользователя',
                'verbose_name_plural': 'Контакты пользователей',
                'unique_together': {('user', 'title')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('show_in_profile', models.BooleanField(default=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_achievements', to='users.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Достижение пользователя',
                'verbose_name_plural': 'Достижения пользователей',
                'unique_together': {('user', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', annoying.fields.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to='authentication.user', verbose_name='User')),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='About me')),
                ('achievements', models.ManyToManyField(blank=True, to='users.UserAchievement', verbose_name='Достижения')),
                ('contacts', models.ManyToManyField(blank=True, to='users.UserContact', verbose_name='Контакты')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
    ]
